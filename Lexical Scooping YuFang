makeCacheMatrix <- function(x = matrix()) { 

# make inverse null in the first place in case of misoperation
invrs <- NULL set <- function(y) {
x <- y invrs <- NULL } get <- function() x

# transfer variables into the two functions 
setinverse <- function(inverse) invrs <- inverse getinverse <- function() invrs
# set value into variables
list(set=set, get=get, setinverse=setinverse, getinverse = getinverse) }

# return a matrix that is the inverse of 'x'
cacheSolve <- function(x, ...) {
# to get the value from x in getinverse
invrs <= x$getinverse() 
if(!is.null(invrs))
{message("Getting Cached Data:-") return(invrs) }
# if the invr is null, then 
matrx <- x$get() 
invr <- solve(matrx, ...) 
x$setinverse(invrs) 
invrs
}
